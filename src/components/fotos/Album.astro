---
import { Picture } from 'astro:assets'
import Icon from 'astro-icon'
import { Fragment } from 'astro/jsx-runtime'
import type { Color } from '@src/types.d'
import { twColorUtils as colors } from '@src/types.d'

interface Props {
	title: string
	slug: string
	img: Promise<{ default: ImageMetadata }>
	location: string
	date: {
		from: Date
		to: Date
	}
	color: Color
}

const { title, slug, img, location, date, color } = Astro.props
---

<a class:list={['flex h-full gap-4 overflow-hidden rounded-md border-2 border-slate-200 p-1 shadow-md', colors[color].bg]} href={`/fotos/${slug}`}>
	<Picture class="h-full object-cover" height={200} src={img} alt={title} formats={['avif', 'webp']} />
	<div class="flex flex-col gap-2 py-2">
		<h1 transition:name={`poster-${title}`} class="font-bold">{title}</h1>
		<p transition:name={`location-${title}`} class="rounded-md bg-lime-100 p-2">
			<Icon class="mr-1 inline h-6" name="mdi:location" />
			{location}
		</p>
		<p transition:name={`date-${title}`} class="rounded-md bg-cyan-100 p-2">
			<Icon class="mr-1 inline h-6" name="ic:baseline-date-range" />
			{
				date.from.toLocaleDateString() === date.to.toLocaleDateString() ? (
					<>{date.from.toLocaleDateString()}</>
				) : (
					<>
						{date.from.toLocaleDateString()} - {date.to.toLocaleDateString()}
					</>
				)
			}
		</p>
	</div>
</a>
